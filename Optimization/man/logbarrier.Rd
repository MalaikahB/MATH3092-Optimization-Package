% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Optimization.R
\name{logbarrier}
\alias{logbarrier}
\title{Log-Barrier Method}
\usage{
logbarrier(f, A, b, x0, it = 10, m, mu, epsilon = 0.001, t = 10)
}
\arguments{
\item{f}{Objective function f to which the user is trying to optimize}

\item{A}{Sum of inequality constraint functions. So for a constraint Ax ≤ b this argument takes the sum of Ax}

\item{b}{Sum of the right hand side of all inequality constraints from the optimization problem. So for the constraint Ax ≤ b this is the sum of all b}

\item{x0}{Intial guess of the solution to the optimization problem}

\item{it}{Number of iterations the algorithm should run, default is set at 10}

\item{m}{Total number of constraints in the problem}

\item{mu}{multiple to increase t by, must be greater than 1}

\item{epsilon}{Level of which is used to show that the function is converging towards the optimal solution. Default is set at e= 1e-07}

\item{t}{The initial t value used to transform the the problem to unconstrained. Note that the larger the t value the higher accuracy the problem has, typical values lie between t = 10-20. Default set at t = 1}
}
\value{
\code{logbarrier} returns an object of \code{class}.

The functions \code{summary}, \code{print} and \code{plot} are used to obtain a summary table of results,
returning the final result and plot correspondingly.

The object of class \code{"barrier"} is a list containing the following components:

\code{func}    objective function to be optimized

\code{cons}    Inequality constraints in the form Ax - b

\code{x_optimal}   optimal x_1 found after each outer iteration

\code{y_optimal}   optimal x_2 found after each outer iteration

\code{sol}   final optimal values found by Log-Barrier Method

\code{result_function}   The value of objective function using the \code{x_optimal} and \code{y_optimal} values

\code{it}    number of iterations run by the algorithm

\code{newton}    the optimal result found after each inner iteration
}
\description{
Log-Barrier Method
}
\examples{

objective <- function(x){
        return((1 - x[1])**2 + 100*(x[2] - x[1]**2)**2)
                                              }
inequality <- function(x){
     return((x[1]**2 + x[2]**2))
           }

lbexample <- logbarrier(objective, inequality, b = 2, c(0.9, 0.9),
                        m = 1, mu = 10, t = 10)
print(lbexample)

> print(lbexample)
   log-barrier solution 0.8036947 0.645237
    Number of iterations 1

}
